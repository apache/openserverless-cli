# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
version: "3"

vars:
  BRANCH: "0.1.0-testing"
  BASEVER: "0.1.0-testing"
  VERSION:
    sh: git describe --tags --abbrev=0 2>/dev/null || git rev-parse --short HEAD
  DEBUG: ""

tasks:

  default: task -l
  setup: { silent:true }

  cli-tag:
    desc: tag the cli to generate the build
    cmds:
    - git tag -d $(git tag)
    - echo "{{.BASEVER}}.$(date +%y%m%d%H%M)" >version.txt
    - git tag -f "v$(cat version.txt)"
    - echo "{{.BRANCH}}" >branch.txt
    - git add version.txt branch.txt
    - git tag


  rebuild:
    - rm -f ops
    - task: build

  build:
    desc: build ops locally
    cmds:
      - echo building {{.VERSION}}
      - go build  {{.DEBUG}} cmd/ops/ops.go
    sources:
      - "*.go"
      - "*/*.go"
      - version.txt
      - branch.txt
    generates:
      - ops

  debug:
    cmds:
      - task: build
        vars:
          DEBUG: "-gcflags '-l -N'"
      - dlv exec ./ops -- {{.CLI_ARGS}}

  install:
    desc: install ops in usr/local/bin
    deps:
      - build
    cmds:
      - sudo cp ops /usr/local/bin
      - sudo ln -sf /usr/local/bin/ops /usr/local/bin/nuv

  test:
    desc: tests all
    cmds:
      - task: install
      - task: utest
      - task: itest

  utest:
    desc: unit test nuv
    cmds:
      - rm -Rf ~/.nuv/olaris
      - go test -v github.com/apache/openserverless-cli
      - go test -v github.com/apache/openserverless-cli/config
      - go test -v github.com/apache/openserverless-cli/tools  
      - echo TODO go test github.com/apache/openserverless-cli/auth
      

  bats:
    dir: tests
    cmds:
    - git clone https://github.com/bats-core/bats-core bats
    - git clone https://github.com/bats-core/bats-support test_helper/bats-support
    - git clone https://github.com/bats-core/bats-assert test_helper/bats-assert
    status:
    - test -d bats

  itest:
    desc: integration tests for nuv (T=<test-name> without .bats, empty all)
    dir: tests
    cmds:
      - task: bats
      - rm -Rf ~/.nuv/olaris
      - |
        if test -z "{{.T}}"
        then bats/bin/bats .
        else bats/bin/bats {{.T}}.bats
        fi

  clean:
    - rm ops || true
    - go clean -cache -modcache -testcache -fuzzcache

  utestdiff:
    cmds:
      - |-
        if test -z '{{.N}}'
        then  go test -v | tee _difftest
              python3 difftest.py
        else  python3 difftest.py {{.N}}
        fi

